"use strict";(self.webpackChunkPromptPal_github_io=self.webpackChunkPromptPal_github_io||[]).push([[746],{4129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var o=n(6070),s=n(7468);const c={sidebar_position:2},r="Concepts",i={id:"basic/concepts",title:"Concepts",description:"Project has many Prompt, Prompt can be executed many times and the concept is called Prompt Call",source:"@site/docs/basic/concepts.mdx",sourceDirName:"basic",slug:"/basic/concepts",permalink:"/docs/basic/concepts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/docs/basic/install"},next:{title:"Create a Project",permalink:"/docs/basic/project"}},a={},p=[{value:"Project",id:"project",level:2},{value:"Token",id:"token",level:2},{value:"Prompt",id:"prompt",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"concepts",children:"Concepts"}),"\n",(0,o.jsxs)(t.p,{children:["Project has many Prompt, Prompt can be executed many times and the concept is called ",(0,o.jsx)(t.code,{children:"Prompt Call"})]}),"\n",(0,o.jsx)(t.h2,{id:"project",children:"Project"}),"\n",(0,o.jsx)(t.p,{children:"Project has some configuration like which model are you using and how's the TopP of your model. and what's the API key is."}),"\n",(0,o.jsx)(t.p,{children:"now we are supporting OpenAI and Google Gemini."}),"\n",(0,o.jsx)(t.h2,{id:"token",children:"Token"}),"\n",(0,o.jsx)(t.p,{children:"you'll need this token to execute the prompt in client."}),"\n",(0,o.jsx)(t.h2,{id:"prompt",children:"Prompt"}),"\n",(0,o.jsx)(t.p,{children:"Prompt must be tested before saving."}),"\n",(0,o.jsx)(t.p,{children:"Prompt has some variables. and one single response can be sent."}),"\n",(0,o.jsxs)(t.p,{children:["if enable the ",(0,o.jsx)(t.code,{children:"debug"})," mode, the prompt will be executed in debug mode, which meanings you can see the input and output of a prompt to make sure the prompt is correct."]}),"\n",(0,o.jsxs)(t.p,{children:["when it executed. a record will be created. which is ",(0,o.jsx)(t.code,{children:"Prompt Call"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},7468:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(758);const s={},c=o.createContext(s);function r(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);